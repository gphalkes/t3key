TODO
====
- make t3keyc a check program, rather than a compiler
- update make install because the new database is simply files in a directory
	- add symlinks (perhaps add an option to t3keyc)
- update text_format.txt and remove binary_format.txt



- we could store the fact that some keys with meta are simply esc-<key>. This
  also holds for combinations (key+cms = esc key+cs). The reason for doing so
  is that then we may be able to say whether a particular key is available by
  looking it up in the database.

- handle keys that are available in terminfo, but not in the (text) database,
  and keys for which the TI entry differs.
- what to do with all these keys that may be available on hardware terminals,
  but not on PC keyboards?
- perhaps we should add a key "ambiguous", such that we can assign all sequences
  that can not be reasonably assigned to a single key

- what do we do with duplicates? It's not always possible to say which is the
  "original" and which is the actual duplicate. This is partly a job for the
  database creator to only include the ones that are sensible. In principle
  we should only have one key symbol return a particular sequence, because
  otherwise the program using libckey can't figure out what to do and results
  may depend on the comparison order.

- use libt3config and drop the binary format. This makes it easier to see what
  is going on, and allows users to easily modify the files to accomodate their
  own needs.
- implement "partial maps" to override other existing maps. This can be used to
  add or overwrite keys by a user. For example, one could add the putty keys
  for easy access, or change the linux console map and add those keys by
  simply putting them in ~/.t3key/
- drop the sub-directories in the database

